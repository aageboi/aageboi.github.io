{"version":3,"sources":["components/UI/Card.js","components/UI/LoadingIndicator.js","hooks/http.js","components/Furnitures/FurnitureForm.js","components/Furnitures/FurnitureList.js","components/Furnitures/Furnitures.js","App.js","index.js"],"names":["Card","props","style","className","children","LoadingIndicator","initialState","loading","error","data","httpReducer","curHttpState","action","type","responseData","errorMessage","Error","useHttp","useReducer","httpState","dispatchHttp","clear","useCallback","sendRequest","url","method","body","fetch","headers","then","response","json","catch","isLoading","FurnitureForm","React","memo","onLoadingFurnitures","onFilterFurnitures","useState","enteredFilter","setEnteredFilter","loadedStyles","setLoadedStyles","userFilteredStyles","setUserFilteredStyles","userFilteredTimes","setUserFilteredTimes","inputRef","useRef","styleRef","timeRef","optionsDelivery","name","value","Infinity","optionsStyle","map","useEffect","timer","setTimeout","current","filteredProducts","products","length","filter","item","delivery_time","Math","max","furniture","toLowerCase","includes","clearTimeout","onSelectStyles","selectedStyles","furnitureStyles","filtered","Set","filteredStyle","furniture_style","some","has","onSelectTimes","selectedTimes","deliveryTime","loadedFurnitures","key","push","id","description","substring","price","toLocaleString","furniture_styles","ref","placeholder","onChange","event","target","options","showCheckbox","displayValue","onSelect","onRemove","FurnitureList","furnitures","fr","furnitureReducer","currentFurnitures","Furnitures","userFurnitures","dispatch","loadingFurnituresHandler","filterFurnituresHandler","furnitureList","useMemo","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3cbfbce.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  const { style } = props;\n\n  return <div className=\"card\" style={ style }>{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './LoadingIndicator.css';\n\nconst LoadingIndicator = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import { useReducer, useCallback } from 'react';\n\nconst initialState = {\n  loading: false,\n  error: null,\n  data: null\n};\n\nconst httpReducer = (curHttpState, action) => {\n  switch (action.type) {\n    case 'SEND':\n      return {\n        loading: true,\n        error: null,\n        data: null\n      };\n    case 'RESPONSE':\n      return {\n        ...curHttpState,\n        loading: false,\n        data: action.responseData\n      };\n    case 'ERROR':\n      return { loading: false, error: action.errorMessage };\n    case 'CLEAR':\n      return initialState;\n    default:\n      throw new Error('Should not be reached!');\n  }\n};\n\nconst useHttp = () => {\n  const [ httpState, dispatchHttp ] = useReducer(httpReducer, initialState);\n\n  const clear = useCallback(() => dispatchHttp({ type: 'CLEAR' }), []);\n\n  const sendRequest = useCallback(\n    (url, method, body) => {\n      dispatchHttp({ type: 'SEND' });\n      fetch(url, {\n        method: method,\n        body: body,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(response => {\n          return response.json();\n        })\n        .then(responseData => {\n          dispatchHttp({\n            type: 'RESPONSE',\n            responseData: responseData\n          });\n        })\n        .catch(error => {\n          dispatchHttp({\n            type: 'ERROR',\n            errorMessage: 'Something went wrong!'\n          });\n        });\n    },\n    []\n  );\n\n  return {\n    isLoading: httpState.loading,\n    data: httpState.data,\n    error: httpState.error,\n    sendRequest: sendRequest,\n    clear: clear\n  };\n};\n\nexport default useHttp;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingIndicator from '../UI/LoadingIndicator';\nimport useHttp from '../../hooks/http';\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport './FurnitureForm.css';\n\nconst FurnitureForm = React.memo(props => {\n  const { onLoadingFurnitures, onFilterFurnitures } = props;\n  \n  const [ enteredFilter, setEnteredFilter ] = useState('');\n  const [ loadedStyles, setLoadedStyles ] = useState([]);\n  const [ userFilteredStyles, setUserFilteredStyles ] = useState([]);\n  const [ userFilteredTimes, setUserFilteredTimes ] = useState([]);\n\n  const inputRef = useRef();\n  const styleRef = useRef();\n  const timeRef = useRef();\n  const { sendRequest, isLoading, error, data } = useHttp();\n\n  const optionsDelivery = [\n    { name: \"1 Week\", value: 7 },\n    { name: \"2 Weeks\", value: 14 },\n    { name: \"1 Months\", value: 30 },\n    { name: \"All\", value: Infinity }\n  ];\n  const optionsStyle = loadedStyles.map(name => ({ name }));\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (data && enteredFilter === inputRef.current.value) {\n        // const arrProducts = [].concat.apply([], data.products);\n        let filteredProducts = data.products;\n\n        if (userFilteredStyles.length > 0) {\n          filteredProducts = userFilteredStyles;\n        }\n\n        if (userFilteredTimes.length > 0) {\n          filteredProducts = filteredProducts.filter(item =>\n            item.delivery_time <= Math.max(...userFilteredTimes)\n          );\n        }\n\n        if (inputRef.current.value !== '') {\n          filteredProducts = filteredProducts.filter(furniture => {\n            return furniture.name\n              .toLowerCase()\n              .includes(enteredFilter.toLowerCase());\n          });\n        }\n\n        onFilterFurnitures(filteredProducts);\n      }\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [enteredFilter, inputRef, data, userFilteredStyles, userFilteredTimes, onFilterFurnitures]);\n\n  const onSelectStyles = useCallback(selectedStyles => {\n    if (data) {\n      const products = data.products;\n      if (selectedStyles.length > 0) {\n        const furnitureStyles = selectedStyles.map(\n          item => item.name\n        );\n        const filtered = new Set(furnitureStyles);\n        const filteredStyle = products.filter(item =>\n          item.furniture_style.some(style => filtered.has(style))\n        );\n        setUserFilteredStyles(filteredStyle);\n      } else {\n        setUserFilteredStyles([]);\n      }\n    }\n  }, [data]);\n\n  const onSelectTimes = useCallback(selectedTimes => {\n    if (data) {\n      if (selectedTimes.length > 0) {\n        const deliveryTime = selectedTimes.map(\n          item => item.value\n        );\n        setUserFilteredTimes(deliveryTime);\n      } else {\n        setUserFilteredTimes([]);\n      }\n    }\n  }, [data]);\n\n  useEffect(() => {\n    sendRequest(\n      'https://www.mocky.io/v2/5c9105cb330000112b649af8',\n      'GET'\n    );\n  }, [sendRequest]);\n\n  useEffect(() => {\n    if (!isLoading && !error && data) {\n      const loadedFurnitures = [];\n      for (const key in data.products) {\n        loadedFurnitures.push({\n          id: key,\n          name: data.products[key].name,\n          delivery_time: data.products[key].delivery_time,\n          description: data.products[key].description.substring(0, 114) + \"...\",\n          furniture_style: data.products[key].furniture_style,\n          price: data.products[key].price.toLocaleString(\"id-ID\")\n        });\n      }\n      onLoadingFurnitures(loadedFurnitures);\n      setLoadedStyles(data.furniture_styles);\n    }\n  }, [data, isLoading, error, onLoadingFurnitures]);\n\n  return (\n    <section className=\"furniture-form\">\n      <Card>\n        <div className=\"form-control\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={enteredFilter}\n            placeholder=\"Search Furniture\"\n            onChange={event => {\n              setEnteredFilter(event.target.value);\n            }}\n          />\n        </div>\n        <div className=\"furniture-form__select\">\n          <Multiselect\n            ref={styleRef}\n            options={optionsStyle}\n            showCheckbox={true}\n            displayValue=\"name\"\n            onSelect={onSelectStyles}\n            onRemove={onSelectStyles}\n            placeholder=\"Furniture Style\"\n          />\n          <Multiselect\n            ref={timeRef}\n            options={optionsDelivery}\n            showCheckbox={true}\n            displayValue=\"name\"\n            onSelect={onSelectTimes}\n            onRemove={onSelectTimes}\n            placeholder=\"Delivery Time\"\n          />\n        </div>\n        {isLoading && <LoadingIndicator />}\n      </Card>\n    </section>\n  );\n});\n\nexport default FurnitureForm;\n","import React from 'react';\n\nimport './FurnitureList.css';\n\nconst FurnitureList = props => {\n  return (\n    <section className=\"furniture-list\">\n      <ul>\n\t    {props.furnitures.map(fr => (\n        <li key={fr.name}>\n          <div className=\"furniture-title\">\n  \t       <h2>{fr.name}</h2>\n  \t       <div className=\"furniture-price\">Rp. {fr.price.toLocaleString(\"id-ID\")}</div>\n          </div>\n\t        <span>{fr.description.substring(0, 114) + \"...\"}</span>\n          <div className=\"furniture-styles\">\n            {fr.furniture_style.map(style => (\n              <strong key={style}>{style}</strong>\n            ))}\n          </div>\n          <div className=\"furniture-time\">\n            {fr.delivery_time} days delivery\n          </div>\n        </li>\n\t    ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default FurnitureList;\n","import React, { useCallback, useReducer, useMemo } from 'react';\n\nimport FurnitureForm from './FurnitureForm';\nimport FurnitureList from './FurnitureList';\n\nconst furnitureReducer = (currentFurnitures, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.furnitures;\n    default:\n      throw new Error('Should not get there!');\n  }\n};\n\nconst Furnitures = () => {\n  const [userFurnitures, dispatch] = useReducer(furnitureReducer, []);\n\n  const loadingFurnituresHandler = useCallback(loadedFurnitures => {\n    dispatch({ type: 'SET', furnitures: loadedFurnitures });\n  }, []);\n\n  const filterFurnituresHandler = useCallback(data => {\n    dispatch({ type: 'SET', furnitures: data });\n  }, []);\n\n  const furnitureList = useMemo(() => {\n    return (\n      <FurnitureList\n        furnitures={userFurnitures}\n      />\n    );\n  }, [userFurnitures]);\n\n\treturn (\n    <div className=\"App\">\n      <FurnitureForm \n        onLoadingFurnitures={loadingFurnituresHandler}\n        onFilterFurnitures={filterFurnituresHandler}\n      />\n\n      <section>\n        {furnitureList}\n      </section>\n    </div>\n  );\n};\n\nexport default Furnitures;\n","import React from 'react';\n\nimport Furnitures from './components/Furnitures/Furnitures';\n\nconst App = props => {\n\n  return <Furnitures />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}